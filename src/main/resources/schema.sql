
CREATE TABLE IF NOT EXISTS "user" (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    birthday TIMESTAMP,
    email VARCHAR(255),
    login VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS mpa (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS film (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    description VARCHAR(1000),
    releaseDate TIMESTAMP,
    duration INTEGER,
    mpa_id INTEGER REFERENCES mpa(id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_id INTEGER NOT NULL,
    friend_id INTEGER NOT NULL,
    constraint "user_friend_user_id_user_id_fk"
    foreign key (user_id) references "user" (id) ON DELETE CASCADE,
    constraint "user_friend_friend_id_user_id_fk"
    foreign key (friend_id) references "user" (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS likes (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER,
    film_id INTEGER,
    constraint "user_like_user_id_user_id_fk"
    foreign key (user_id) references "user" (id) ON DELETE CASCADE,
    constraint "user_like_film_id_film_id_fk"
    foreign key (film_id) references film (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS film_genre (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id INTEGER,
    genre_id INTEGER,
    constraint "film_genre_film_id_film_id_fk"
    foreign key (film_id) references film (id) ON DELETE CASCADE,
    constraint "film_genre_genre_id_genre_id_fk"
    foreign key (genre_id) references genres (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content VARCHAR(1000),
    is_positive BOOLEAN,
    useful INTEGER DEFAULT 0,
    film_id INTEGER,
    user_id INTEGER,
    CONSTRAINT "review_film_id_film_id_fk"
    FOREIGN KEY (film_id) REFERENCES film(id) ON DELETE CASCADE,
    CONSTRAINT "review_user_id_user_id_fk"
    FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review_likes (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER,
    review_id INTEGER,
    CONSTRAINT "review_like_user_id_user_id_fk"
    FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE,
    CONSTRAINT "review_like_review_id_review_id_fk"
    FOREIGN KEY (review_id) REFERENCES review(id) ON DELETE CASCADE
);



